trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '6be4cf43-e395-43e0-a60d-9f50bb1d9749'

  # Web app name
  webAppName: 'trident-webapp-webapp-linux-predict-trident'

  # Agent VM image name
  vmName: 'Udadcity Build Agent'

  # Environment name
  environmentName: 'trident-webapp-webapp-linux-predict-trident'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.8
  pythonVersion: '3.8.0'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool: $(vmName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python3 -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip &&\
          pip install -r requirements.txt
        # pip install setup
        # pip install -r requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - script: |
        make all
      workingDirectory: $(projectRoot)
      displayName: "Lint test for project"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool: $(vmName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          # - task: AzureWebApp@1
          #   displayName: 'Deploy Azure Web App : $(webAppName)'
          #   inputs:
          #     appType: webAppLinux

          #     azureSubscription: $(azureServiceConnectionId)
          #     appName: $(webAppName)
          #     package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip

          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy Azure Web App'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'UdacityServiceConnection'
              appType: 'webAppLinux'
              WebAppName: 'trident-webapp-webapp-linux-predict-trident'
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              RuntimeStack: 'PYTHON|3.8'

          